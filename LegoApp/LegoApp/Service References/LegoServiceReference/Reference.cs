//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace LegoApp.LegoServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LegoServiceReference.ILegoService")]
    public interface ILegoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILegoService/Forward", ReplyAction="http://tempuri.org/ILegoService/ForwardResponse")]
        System.IAsyncResult BeginForward(System.AsyncCallback callback, object asyncState);
        
        void EndForward(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILegoService/Back", ReplyAction="http://tempuri.org/ILegoService/BackResponse")]
        System.IAsyncResult BeginBack(System.AsyncCallback callback, object asyncState);
        
        void EndBack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILegoService/Left", ReplyAction="http://tempuri.org/ILegoService/LeftResponse")]
        System.IAsyncResult BeginLeft(System.AsyncCallback callback, object asyncState);
        
        void EndLeft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILegoService/Right", ReplyAction="http://tempuri.org/ILegoService/RightResponse")]
        System.IAsyncResult BeginRight(System.AsyncCallback callback, object asyncState);
        
        void EndRight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILegoService/Stop", ReplyAction="http://tempuri.org/ILegoService/StopResponse")]
        System.IAsyncResult BeginStop(System.AsyncCallback callback, object asyncState);
        
        void EndStop(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegoServiceChannel : LegoApp.LegoServiceReference.ILegoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegoServiceClient : System.ServiceModel.ClientBase<LegoApp.LegoServiceReference.ILegoService>, LegoApp.LegoServiceReference.ILegoService {
        
        private BeginOperationDelegate onBeginForwardDelegate;
        
        private EndOperationDelegate onEndForwardDelegate;
        
        private System.Threading.SendOrPostCallback onForwardCompletedDelegate;
        
        private BeginOperationDelegate onBeginBackDelegate;
        
        private EndOperationDelegate onEndBackDelegate;
        
        private System.Threading.SendOrPostCallback onBackCompletedDelegate;
        
        private BeginOperationDelegate onBeginLeftDelegate;
        
        private EndOperationDelegate onEndLeftDelegate;
        
        private System.Threading.SendOrPostCallback onLeftCompletedDelegate;
        
        private BeginOperationDelegate onBeginRightDelegate;
        
        private EndOperationDelegate onEndRightDelegate;
        
        private System.Threading.SendOrPostCallback onRightCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopDelegate;
        
        private EndOperationDelegate onEndStopDelegate;
        
        private System.Threading.SendOrPostCallback onStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LegoServiceClient() {
        }
        
        public LegoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ForwardCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LeftCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LegoApp.LegoServiceReference.ILegoService.BeginForward(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForward(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LegoApp.LegoServiceReference.ILegoService.EndForward(System.IAsyncResult result) {
            base.Channel.EndForward(result);
        }
        
        private System.IAsyncResult OnBeginForward(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LegoApp.LegoServiceReference.ILegoService)(this)).BeginForward(callback, asyncState);
        }
        
        private object[] OnEndForward(System.IAsyncResult result) {
            ((LegoApp.LegoServiceReference.ILegoService)(this)).EndForward(result);
            return null;
        }
        
        private void OnForwardCompleted(object state) {
            if ((this.ForwardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardAsync() {
            this.ForwardAsync(null);
        }
        
        public void ForwardAsync(object userState) {
            if ((this.onBeginForwardDelegate == null)) {
                this.onBeginForwardDelegate = new BeginOperationDelegate(this.OnBeginForward);
            }
            if ((this.onEndForwardDelegate == null)) {
                this.onEndForwardDelegate = new EndOperationDelegate(this.OnEndForward);
            }
            if ((this.onForwardCompletedDelegate == null)) {
                this.onForwardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardCompleted);
            }
            base.InvokeAsync(this.onBeginForwardDelegate, null, this.onEndForwardDelegate, this.onForwardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LegoApp.LegoServiceReference.ILegoService.BeginBack(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBack(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LegoApp.LegoServiceReference.ILegoService.EndBack(System.IAsyncResult result) {
            base.Channel.EndBack(result);
        }
        
        private System.IAsyncResult OnBeginBack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LegoApp.LegoServiceReference.ILegoService)(this)).BeginBack(callback, asyncState);
        }
        
        private object[] OnEndBack(System.IAsyncResult result) {
            ((LegoApp.LegoServiceReference.ILegoService)(this)).EndBack(result);
            return null;
        }
        
        private void OnBackCompleted(object state) {
            if ((this.BackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BackAsync() {
            this.BackAsync(null);
        }
        
        public void BackAsync(object userState) {
            if ((this.onBeginBackDelegate == null)) {
                this.onBeginBackDelegate = new BeginOperationDelegate(this.OnBeginBack);
            }
            if ((this.onEndBackDelegate == null)) {
                this.onEndBackDelegate = new EndOperationDelegate(this.OnEndBack);
            }
            if ((this.onBackCompletedDelegate == null)) {
                this.onBackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBackCompleted);
            }
            base.InvokeAsync(this.onBeginBackDelegate, null, this.onEndBackDelegate, this.onBackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LegoApp.LegoServiceReference.ILegoService.BeginLeft(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLeft(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LegoApp.LegoServiceReference.ILegoService.EndLeft(System.IAsyncResult result) {
            base.Channel.EndLeft(result);
        }
        
        private System.IAsyncResult OnBeginLeft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LegoApp.LegoServiceReference.ILegoService)(this)).BeginLeft(callback, asyncState);
        }
        
        private object[] OnEndLeft(System.IAsyncResult result) {
            ((LegoApp.LegoServiceReference.ILegoService)(this)).EndLeft(result);
            return null;
        }
        
        private void OnLeftCompleted(object state) {
            if ((this.LeftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LeftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LeftAsync() {
            this.LeftAsync(null);
        }
        
        public void LeftAsync(object userState) {
            if ((this.onBeginLeftDelegate == null)) {
                this.onBeginLeftDelegate = new BeginOperationDelegate(this.OnBeginLeft);
            }
            if ((this.onEndLeftDelegate == null)) {
                this.onEndLeftDelegate = new EndOperationDelegate(this.OnEndLeft);
            }
            if ((this.onLeftCompletedDelegate == null)) {
                this.onLeftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLeftCompleted);
            }
            base.InvokeAsync(this.onBeginLeftDelegate, null, this.onEndLeftDelegate, this.onLeftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LegoApp.LegoServiceReference.ILegoService.BeginRight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LegoApp.LegoServiceReference.ILegoService.EndRight(System.IAsyncResult result) {
            base.Channel.EndRight(result);
        }
        
        private System.IAsyncResult OnBeginRight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LegoApp.LegoServiceReference.ILegoService)(this)).BeginRight(callback, asyncState);
        }
        
        private object[] OnEndRight(System.IAsyncResult result) {
            ((LegoApp.LegoServiceReference.ILegoService)(this)).EndRight(result);
            return null;
        }
        
        private void OnRightCompleted(object state) {
            if ((this.RightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RightAsync() {
            this.RightAsync(null);
        }
        
        public void RightAsync(object userState) {
            if ((this.onBeginRightDelegate == null)) {
                this.onBeginRightDelegate = new BeginOperationDelegate(this.OnBeginRight);
            }
            if ((this.onEndRightDelegate == null)) {
                this.onEndRightDelegate = new EndOperationDelegate(this.OnEndRight);
            }
            if ((this.onRightCompletedDelegate == null)) {
                this.onRightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRightCompleted);
            }
            base.InvokeAsync(this.onBeginRightDelegate, null, this.onEndRightDelegate, this.onRightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LegoApp.LegoServiceReference.ILegoService.BeginStop(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStop(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LegoApp.LegoServiceReference.ILegoService.EndStop(System.IAsyncResult result) {
            base.Channel.EndStop(result);
        }
        
        private System.IAsyncResult OnBeginStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LegoApp.LegoServiceReference.ILegoService)(this)).BeginStop(callback, asyncState);
        }
        
        private object[] OnEndStop(System.IAsyncResult result) {
            ((LegoApp.LegoServiceReference.ILegoService)(this)).EndStop(result);
            return null;
        }
        
        private void OnStopCompleted(object state) {
            if ((this.StopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopAsync() {
            this.StopAsync(null);
        }
        
        public void StopAsync(object userState) {
            if ((this.onBeginStopDelegate == null)) {
                this.onBeginStopDelegate = new BeginOperationDelegate(this.OnBeginStop);
            }
            if ((this.onEndStopDelegate == null)) {
                this.onEndStopDelegate = new EndOperationDelegate(this.OnEndStop);
            }
            if ((this.onStopCompletedDelegate == null)) {
                this.onStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopCompleted);
            }
            base.InvokeAsync(this.onBeginStopDelegate, null, this.onEndStopDelegate, this.onStopCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LegoApp.LegoServiceReference.ILegoService CreateChannel() {
            return new LegoServiceClientChannel(this);
        }
        
        private class LegoServiceClientChannel : ChannelBase<LegoApp.LegoServiceReference.ILegoService>, LegoApp.LegoServiceReference.ILegoService {
            
            public LegoServiceClientChannel(System.ServiceModel.ClientBase<LegoApp.LegoServiceReference.ILegoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginForward(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Forward", _args, callback, asyncState);
                return _result;
            }
            
            public void EndForward(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Forward", _args, result);
            }
            
            public System.IAsyncResult BeginBack(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Back", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBack(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Back", _args, result);
            }
            
            public System.IAsyncResult BeginLeft(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Left", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLeft(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Left", _args, result);
            }
            
            public System.IAsyncResult BeginRight(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Right", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRight(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Right", _args, result);
            }
            
            public System.IAsyncResult BeginStop(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Stop", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Stop", _args, result);
            }
        }
    }
}
